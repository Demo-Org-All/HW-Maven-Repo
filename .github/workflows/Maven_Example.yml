name: CI with Maven

on:
  push:
    branches: [ master ]
  
jobs:
  Maven_Build_Deploy:
    runs-on: self-hosted
    steps:
         - uses: actions/checkout@v2
         - name: Build with Maven
           run: mvn clean install
           
         - name: Upload a Build Artifact
           uses: actions/upload-artifact@v2.3.1
           with:
             name: assets-for-upload
             path: target/*.war
             retention-days: 5
         - name: Download a Build Artifact
           uses: actions/download-artifact@v2.1.0
           with:
             name: assets-for-upload
             # Destination path
             path: e:\temp\rel
         - name: Archive the WAR file (Create ZIP  file for Release)
           uses: vimtor/action-zip@v1
           with:
             files: target/HelloWorld-Maven.war
             dest: Hw-Maven-Repo.zip
         - name: Create Github Release
           id: create-new-release
           uses: actions/create-release@v1
           env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
           with:
            tag_name: v${{ github.run_number }}
            release_name: Release V${{ github.run_number }}
         - name: Upload   
         - name: Upload asset to Github Release
           uses: actions/upload-release-asset@v1
           env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
           with:
            upload_url: ${{ steps.create-new-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: ${{ github.workspace }}/Hw-Maven-Repo.zip
            asset_name: Hw-Maven-Repo-v${{ github.run_number }}.zip
            asset_content_type: application/zip 
         - name: Deploy to Tomcat
           run: copy ${env:GITHUB_WORKSPACE}\target\HelloWorld-Maven.war E:\apache-tomcat-7.0.65\apache-tomcat-7.0.65\webapps\
